// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2025 all rights reserved

// code guard
#if !defined(qed_nisar_real_value_icc)
#error this file contains implementation details for qed::nisar::real::value
#else


// the value part tile generator
template <typename sourceT>
auto
qed::nisar::real::value(
    // the source
    const dataset_t & dataset,
    // the layout
    const datatype_t & datatype,
    // the origin of the tile
    typename sourceT::index_type origin,
    // the tile shape
    typename sourceT::shape_type tile,
    // the stride
    typename sourceT::index_type stride,
    // the range of values to render
    double min, double max) -> bmp_t
{
    // type aliases
    using index_t = typename sourceT::index_type;
    using shape_t = typename sourceT::shape_type;

    // compute the zoomed origin
    auto zoomedOrigin = origin;
    // by setting each of its entries
    for (int axis = 0; axis < index_t::rank(); ++axis) {
        // to the product of the stride with the specified origin
        zoomedOrigin[axis] *= stride[axis];
    }

    // read the data
    auto source = pyre::h5::read<sourceT>(dataset, datatype, zoomedOrigin, tile, stride);
    // render and return
    return native::channels::real(source, { 0, 0 }, tile, { 1, 1 }, min, max);
}


#endif

// end of file
